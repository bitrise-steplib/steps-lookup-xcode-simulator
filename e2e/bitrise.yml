format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git


workflows:
  test_udid:
    before_run:
    - _expose_xcode_version
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -e

            if [[ ${XCODE_MAJOR_VERSION} -eq 10 ]]; then
              envman add --key "SIMULATOR_OS_VERSION" --value "12.4"
            elif [[ ${XCODE_MAJOR_VERSION} -eq 11 ]]; then
              envman add --key "SIMULATOR_OS_VERSION" --value "13.6"
            elif [[ ${XCODE_MAJOR_VERSION} -eq 12 ]]; then
              envman add --key "SIMULATOR_OS_VERSION" --value "14.5"
            elif [[ ${XCODE_MAJOR_VERSION} -eq 13 ]]; then
              envman add --key "SIMULATOR_OS_VERSION" --value "15.0"
            fi
    - path::./:
        title: Test Step
        inputs:
        - simulator_device: "iPhone 8"
        - simulator_os_version: $SIMULATOR_OS_VERSION
    - script:
        inputs:
        - content: |-
            set -ex 
            if [[ -z "$XCODE_SIMULATOR_UDID" ]]; then
              echo "XCODE_SIMULATOR_UDID not exported"
              exit 1
            fi

  _expose_xcode_version:
    steps:
      - script:
          title: Expose Xcode major version
          inputs:
            - content: |-
                #!/bin/env bash
                set -e
                if [[ ! -z "$XCODE_MAJOR_VERSION" ]]; then
                  echo "Xcode major version already exposed: $XCODE_MAJOR_VERSION"
                  exit 0
                fi
                version=`xcodebuild -version`
                regex="Xcode ([0-9]*)."
                if [[ ! $version =~ $regex ]]; then
                  echo "Failed to determine Xcode major version"
                  exit 1
                fi
                xcode_major_version=${BASH_REMATCH[1]}
                echo "Xcode major version: $xcode_major_version"
                envman add --key XCODE_MAJOR_VERSION --value $xcode_major_version

